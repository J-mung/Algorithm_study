package com.company;
/*
전체 학생의 수 n, 체육복을 도난당한 학생들의 번호가 담긴 배열 lost, 여벌의 체육복을 가져온 학생들의 번호가 담긴 배열 reserve가 매개변수로 주어질 때,
체육수업을 들을 수 있는 학생의 최댓값을 return 하도록 solution 함수를 작성해주세요.

제한사항
    전체 학생의 수는 2명 이상 30명 이하입니다.
    체육복을 도난당한 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.
    여벌의 체육복을 가져온 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.
    여벌 체육복이 있는 학생만 다른 학생에게 체육복을 빌려줄 수 있습니다.
    여벌 체육복을 가져온 학생이 체육복을 도난당했을 수 있습니다.
    이때 이 학생은 체육복을 하나만 도난당했다고 가정하며, 남은 체육복이 하나이기에
    다른 학생에게는 체육복을 빌려줄 수 없습니다.

입출력 예
    n	lost	reserve	return
    5	[2, 4]	[1, 3, 5]	5
    5	[2, 4]	[3]	4
    3	[3]	[1]	2

입출력 예 설명
    예제 #1
    1번 학생이 2번 학생에게 체육복을 빌려주고,
    3번 학생이나 5번 학생이 4번 학생에게 체육복을 빌려주면 학생 5명이 체육수업을 들을 수 있습니다.

    예제 #2
    3번 학생이 2번 학생이나 4번 학생에게 체육복을 빌려주면 학생 4명이 체육수업을 들을 수 있습니다.
*/

/* 해결의 중점
   내가 주위 친구에게 체육복을 빌려줄 수 있는가 없는가를 중점으로 해결할 것

   경우의 수 중에서 내가 여벌의 옷을 가져왔지만, 체육복을 도둑맞은 경우가 있다.
   이 경우에는 주위 친구에게 빌려줄 수 없는 상황이므로 알고리즘이 시작되기 전에
   먼저 처리한다.
 */
public class Sportswear {
    public static void main(String[] args) {
        // 학생 수, 체육복을 잃어버린 학생, 여벌 옷을 가지고 있는 학생
        int n = 5;
        int[] lost = {2, 4}, reserve = {1, 3, 5};
        int answer = n;
        boolean flag = true;
        // 1. 내가 도둑 맞았지만, 여벌을 챙겨왔는지 확인
        for (int i = 0; i < lost.length; i++) {
            for (int j = 0; j < reserve.length; j++) {
                if (lost[i] == reserve[j]) {
                    reserve[j] = -1;
                    lost[i] = -1;
                    break;
                }
            }
        }
        // 체육복을 도둑맞은 학생이 남아 있을 때까지 반복
        for (int num : lost) {
            if(num != -1) {         // 여벌의 옷도 없고, 체육복을 도둑맞은 학생의 경우로 체육복을 빌릴 수 있는 친구 탐색
                answer--;           // 체육복을 못 빌렸다는 것을 디폴트로 설정
                // 굳이 이걸 반복문으로 수행해야 하나?..
                // 어 해야 돼ㅋㅋㅋㅋ num이 인덱스가 아니고 사람이다 사람 num-1은 내 앞 사람이고 num-2는 내 뒷 사람이다.
                for (int idx = 0; idx < reserve.length; idx++) {
                    // 나의 앞 번호가 빌려줄 수 있는지 혹은 나의 뒷 번호가 빌려줄 수 있는지 확인.
                    if (num - 1 == reserve[idx] || num + 1 == reserve[idx]) {
                        reserve[idx] = -1;  // 빌림
                        answer++;           // 수업을 듣는 학생 수 +1
                        break;              // 체육복을 빌렸
                    }
                }
            }
        }
        System.out.println(answer);
    }
}
